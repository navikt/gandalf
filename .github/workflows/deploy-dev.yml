name: DEV - Build, push, and deploy

on:
  push:
    paths-ignore:
      - "README.md"
    branches:
      - "release/**"

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 21
          cache: 'gradle'
          distribution: temurin
      - name: Run tests
        run: ./gradlew clean test
      - name: Unit tests results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-tests-results
          path: build/reports/tests

  build:
    name: Build and push Docker container
    needs: test
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-20.04
    outputs:
      "image": ${{ steps.docker-build-push.outputs.image }}
    permissions:
      packages: "write"
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 21
          cache: 'gradle'
          distribution: temurin
      - name: Build JAR
        run: ./gradlew bootJar -x test

      - name: Push docker image to GAR and sign image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: aura
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }} # Provided as Organization Secret
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }} # Provided as Organization Variable

  deploy-dev-dev:
    name: Deploy to NAIS dev dev
    needs: build
    runs-on: ubuntu-20.04
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-fss
          RESOURCE: .nais/nais.yml
          VARS: .nais/t4-vars.yml
          VAR: image=${{ needs.build.outputs.image }}
          TELEMETRY: ${{ steps.docker-build-push.outputs.telemetry }}
